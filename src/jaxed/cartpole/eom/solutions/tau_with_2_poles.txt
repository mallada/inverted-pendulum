1.0*(-1.0*J1*J2*a1*dtheta1**2*m1*sin(theta1) - 1.0*J1*J2*a2*dtheta2**2*m2*sin(theta2) + 1.0*J1*J2*dds*m1 + 1.0*J1*J2*dds*m2 + 1.0*J1*J2*dds*mc - 1.0*J1*J2*dtheta1**2*l1*m2*sin(theta1) - 1.0*J1*a1*a2**2*dtheta1**2*m1*m2*sin(theta1) - 1.0*J1*a2**3*dtheta2**2*m2**2*sin(theta2) + 1.0*J1*a2**2*dds*m1*m2 - 1.0*J1*a2**2*dds*m2**2*cos(theta2)**2 + 1.0*J1*a2**2*dds*m2**2 + 1.0*J1*a2**2*dds*m2*mc - 1.0*J1*a2**2*dtheta1**2*l1*m2**2*sin(theta1) + 1.0*J1*a2**2*dtheta1**2*l1*m2**2*sin(theta1 - theta2)*cos(theta2) + 0.5*J1*a2**2*g*m2**2*sin(2*theta2) + 1.0*J1*a2*d2*dtheta1*m2*cos(theta2) - 1.0*J1*a2*d2*dtheta2*m2*cos(theta2) - 1.0*J2*a1**3*dtheta1**2*m1**2*sin(theta1) - 1.0*J2*a1**2*a2*dtheta2**2*m1*m2*sin(theta2) - 1.0*J2*a1**2*dds*m1**2*cos(theta1)**2 + 1.0*J2*a1**2*dds*m1**2 + 1.0*J2*a1**2*dds*m1*m2 + 1.0*J2*a1**2*dds*m1*mc - 1.0*J2*a1**2*dtheta1**2*l1*m1*m2*sin(theta1) + 0.5*J2*a1**2*g*m1**2*sin(2*theta1) - 1.0*J2*a1*a2*dtheta2**2*l1*m1*m2*sin(theta1 - theta2)*cos(theta1) - 1.0*J2*a1*d1*dtheta1*m1*cos(theta1) - 1.0*J2*a1*d2*dtheta1*m1*cos(theta1) + 1.0*J2*a1*d2*dtheta2*m1*cos(theta1) - 2.0*J2*a1*dds*l1*m1*m2*cos(theta1)**2 - 1.0*J2*a1*dtheta1**2*l1**2*m1*m2*sin(theta1) + 1.0*J2*a1*g*l1*m1*m2*sin(2*theta1) - 1.0*J2*a2*dtheta2**2*l1**2*m2**2*sin(theta2) - 1.0*J2*a2*dtheta2**2*l1**2*m2**2*sin(theta1 - theta2)*cos(theta1) - 1.0*J2*d1*dtheta1*l1*m2*cos(theta1) - 1.0*J2*d2*dtheta1*l1*m2*cos(theta1) + 1.0*J2*d2*dtheta2*l1*m2*cos(theta1) + 1.0*J2*dds*l1**2*m1*m2 - 1.0*J2*dds*l1**2*m2**2*cos(theta1)**2 + 1.0*J2*dds*l1**2*m2**2 + 1.0*J2*dds*l1**2*m2*mc - 1.0*J2*dtheta1**2*l1**3*m2**2*sin(theta1) + 0.5*J2*g*l1**2*m2**2*sin(2*theta1) - 1.0*a1**3*a2**2*dtheta1**2*m1**2*m2*sin(theta1) - 1.0*a1**2*a2**3*dtheta2**2*m1*m2**2*sin(theta2) - 1.0*a1**2*a2**2*dds*m1**2*m2*cos(theta1)**2 + 1.0*a1**2*a2**2*dds*m1**2*m2 - 1.0*a1**2*a2**2*dds*m1*m2**2*cos(theta2)**2 + 1.0*a1**2*a2**2*dds*m1*m2**2 + 1.0*a1**2*a2**2*dds*m1*m2*mc - 1.0*a1**2*a2**2*dtheta1**2*l1*m1*m2**2*sin(theta1) + 1.0*a1**2*a2**2*dtheta1**2*l1*m1*m2**2*sin(theta1 - theta2)*cos(theta2) + 0.5*a1**2*a2**2*g*m1**2*m2*sin(2*theta1) + 0.5*a1**2*a2**2*g*m1*m2**2*sin(2*theta2) + 1.0*a1**2*a2*d2*dtheta1*m1*m2*cos(theta2) - 1.0*a1**2*a2*d2*dtheta2*m1*m2*cos(theta2) - 1.0*a1*a2**3*dtheta2**2*l1*m1*m2**2*sin(theta1 - theta2)*cos(theta1) - 1.0*a1*a2**2*d1*dtheta1*m1*m2*cos(theta1) - 1.0*a1*a2**2*d2*dtheta1*m1*m2*cos(theta1) + 1.0*a1*a2**2*d2*dtheta2*m1*m2*cos(theta1) - 2.0*a1*a2**2*dds*l1*m1*m2**2*cos(theta1)**2 + 2.0*a1*a2**2*dds*l1*m1*m2**2*cos(theta1)*cos(theta2)*cos(theta1 - theta2) - 0.25*a1*a2**2*dtheta1**2*l1**2*m1*m2**2*(sin(theta1 - 2*theta2) + sin(3*theta1 - 2*theta2)) + 1.0*a1*a2**2*dtheta1**2*l1**2*m1*m2**2*sin(theta1)*cos(theta1 - theta2)**2 - 1.0*a1*a2**2*dtheta1**2*l1**2*m1*m2**2*sin(theta1) - 1.0*a1*a2**2*g*l1*m1*m2**2*sin(theta1)*cos(theta2)*cos(theta1 - theta2) + 1.0*a1*a2**2*g*l1*m1*m2**2*sin(2*theta1) - 1.0*a1*a2**2*g*l1*m1*m2**2*sin(theta2)*cos(theta1)*cos(theta1 - theta2) - 1.0*a1*a2*d2*dtheta1*l1*m1*m2*cos(theta1)*cos(theta1 - theta2) + 1.0*a1*a2*d2*dtheta2*l1*m1*m2*cos(theta1)*cos(theta1 - theta2) + 0.25*a2**3*dtheta2**2*l1**2*m2**3*(sin(2*theta1 - 3*theta2) + sin(2*theta1 - theta2)) + 1.0*a2**3*dtheta2**2*l1**2*m2**3*sin(theta2)*cos(theta1 - theta2)**2 - 1.0*a2**3*dtheta2**2*l1**2*m2**3*sin(theta2) - 1.0*a2**3*dtheta2**2*l1**2*m2**3*sin(theta1 - theta2)*cos(theta1) - 1.0*a2**2*d1*dtheta1*l1*m2**2*cos(theta1) + 1.0*a2**2*d1*dtheta1*l1*m2**2*cos(theta2)*cos(theta1 - theta2) - 1.0*a2**2*d2*dtheta1*l1*m2**2*cos(theta1) + 1.0*a2**2*d2*dtheta1*l1*m2**2*cos(theta2)*cos(theta1 - theta2) + 1.0*a2**2*d2*dtheta2*l1*m2**2*cos(theta1) - 1.0*a2**2*d2*dtheta2*l1*m2**2*cos(theta2)*cos(theta1 - theta2) - 1.0*a2**2*dds*l1**2*m1*m2**2*cos(theta1 - theta2)**2 + 1.0*a2**2*dds*l1**2*m1*m2**2 - 1.0*a2**2*dds*l1**2*m2**3*cos(theta1)**2 + 2.0*a2**2*dds*l1**2*m2**3*cos(theta1)*cos(theta2)*cos(theta1 - theta2) - 1.0*a2**2*dds*l1**2*m2**3*cos(theta2)**2 - 1.0*a2**2*dds*l1**2*m2**3*cos(theta1 - theta2)**2 + 1.0*a2**2*dds*l1**2*m2**3 - 1.0*a2**2*dds*l1**2*m2**2*mc*cos(theta1 - theta2)**2 + 1.0*a2**2*dds*l1**2*m2**2*mc - 0.25*a2**2*dtheta1**2*l1**3*m2**3*(sin(theta1 - 2*theta2) + sin(3*theta1 - 2*theta2)) + 1.0*a2**2*dtheta1**2*l1**3*m2**3*sin(theta1)*cos(theta1 - theta2)**2 - 1.0*a2**2*dtheta1**2*l1**3*m2**3*sin(theta1) + 1.0*a2**2*dtheta1**2*l1**3*m2**3*sin(theta1 - theta2)*cos(theta2) - 1.0*a2**2*g*l1**2*m2**3*sin(theta1)*cos(theta2)*cos(theta1 - theta2) + 0.5*a2**2*g*l1**2*m2**3*sin(2*theta1) - 1.0*a2**2*g*l1**2*m2**3*sin(theta2)*cos(theta1)*cos(theta1 - theta2) + 0.5*a2**2*g*l1**2*m2**3*sin(2*theta2) - 1.0*a2*d2*dtheta1*l1**2*m2**2*cos(theta1)*cos(theta1 - theta2) + 1.0*a2*d2*dtheta1*l1**2*m2**2*cos(theta2) + 1.0*a2*d2*dtheta2*l1**2*m2**2*cos(theta1)*cos(theta1 - theta2) - 1.0*a2*d2*dtheta2*l1**2*m2**2*cos(theta2))/(J1*J2 + J1*a2**2*m2 + J2*a1**2*m1 + J2*l1**2*m2 + a1**2*a2**2*m1*m2 - a2**2*l1**2*m2**2*cos(theta1 - theta2)**2 + a2**2*l1**2*m2**2)