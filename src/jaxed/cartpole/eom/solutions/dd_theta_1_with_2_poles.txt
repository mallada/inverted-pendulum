(-J2*a1*dds*m1*cos(theta1) + J2*a1*g*m1*sin(theta1) - J2*a2*dtheta2**2*l1*m2*sin(theta1 - theta2) - J2*d1*dtheta1 - J2*d2*dtheta1 + J2*d2*dtheta2 - J2*dds*l1*m2*cos(theta1) + J2*g*l1*m2*sin(theta1) - a1*a2**2*dds*m1*m2*cos(theta1) + a1*a2**2*g*m1*m2*sin(theta1) - a2**3*dtheta2**2*l1*m2**2*sin(theta1 - theta2) - a2**2*d1*dtheta1*m2 - a2**2*d2*dtheta1*m2 + a2**2*d2*dtheta2*m2 - a2**2*dds*l1*m2**2*cos(theta1)/2 + a2**2*dds*l1*m2**2*cos(theta1 - 2*theta2)/2 - a2**2*dtheta1**2*l1**2*m2**2*sin(2*theta1 - 2*theta2)/2 + a2**2*g*l1*m2**2*sin(theta1)/2 + a2**2*g*l1*m2**2*sin(theta1 - 2*theta2)/2 - a2*d2*dtheta1*l1*m2*cos(theta1 - theta2) + a2*d2*dtheta2*l1*m2*cos(theta1 - theta2))/(J1*J2 + J1*a2**2*m2 + J2*a1**2*m1 + J2*l1**2*m2 + a1**2*a2**2*m1*m2 - a2**2*l1**2*m2**2*cos(theta1 - theta2)**2 + a2**2*l1**2*m2**2)