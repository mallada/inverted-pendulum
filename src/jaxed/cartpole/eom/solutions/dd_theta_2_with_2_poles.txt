(-J1*a2*dds*m2*cos(theta2) + J1*a2*dtheta1**2*l1*m2*sin(theta1 - theta2) - J1*a2*g*m2*sin(phi - theta2) + J1*d2*dtheta1 - J1*d2*dtheta2 - a1**2*a2*dds*m1*m2*cos(theta2) + a1**2*a2*dtheta1**2*l1*m1*m2*sin(theta1 - theta2) - a1**2*a2*g*m1*m2*sin(phi - theta2) + a1**2*d2*dtheta1*m1 - a1**2*d2*dtheta2*m1 + a1*a2*dds*l1*m1*m2*cos(theta2)/2 + a1*a2*dds*l1*m1*m2*cos(2*theta1 - theta2)/2 + a1*a2*g*l1*m1*m2*sin(phi - theta2)/2 + a1*a2*g*l1*m1*m2*sin(phi - 2*theta1 + theta2)/2 + a2**2*dtheta2**2*l1**2*m2**2*sin(2*theta1 - 2*theta2)/2 + a2*d1*dtheta1*l1*m2*cos(theta1 - theta2) + a2*d2*dtheta1*l1*m2*cos(theta1 - theta2) - a2*d2*dtheta2*l1*m2*cos(theta1 - theta2) - a2*dds*l1**2*m2**2*cos(theta2)/2 + a2*dds*l1**2*m2**2*cos(2*theta1 - theta2)/2 + a2*dtheta1**2*l1**3*m2**2*sin(theta1 - theta2) - a2*g*l1**2*m2**2*sin(phi - theta2)/2 + a2*g*l1**2*m2**2*sin(phi - 2*theta1 + theta2)/2 + d2*dtheta1*l1**2*m2 - d2*dtheta2*l1**2*m2)/(J1*J2 + J1*a2**2*m2 + J2*a1**2*m1 + J2*l1**2*m2 + a1**2*a2**2*m1*m2 - a2**2*l1**2*m2**2*cos(theta1 - theta2)**2 + a2**2*l1**2*m2**2)